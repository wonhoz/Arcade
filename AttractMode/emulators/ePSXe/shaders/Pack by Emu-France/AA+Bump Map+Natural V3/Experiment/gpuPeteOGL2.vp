!!ARBvp1.0

OPTION ARB_position_invariant;

# program.env[1].x/y will give the plugin's "effect level" offset

PARAM filterOffset = program.env[1];

ATTRIB sample = vertex.texcoord[ 0 ];

# gl_TexCoord[0] = gl_MultiTexCoord0; //center
# gl_TexCoord[1] = gl_TexCoord[0] - offsetx ; //left
# gl_TexCoord[2] = gl_TexCoord[0] - offsetx - offsety; //top-left
# gl_TexCoord[3] = gl_TexCoord[0] - offsety ; //top
# gl_TexCoord[4] = gl_TexCoord[0] + offsetx ; //right
# gl_TexCoord[5] = gl_TexCoord[0] + offsetx + offsety; //bottom-right
# gl_TexCoord[6] = gl_TexCoord[0] + offsety ; //bottom

MOV result.texcoord[ 0 ].x, sample.x;
MOV result.texcoord[ 0 ].y, sample.y;
ADD result.texcoord[ 1 ].x, sample.x, -filterOffset.x;
MOV result.texcoord[ 1 ].y, sample.y;
ADD result.texcoord[ 2 ].x, sample.x, -filterOffset.x;
ADD result.texcoord[ 2 ].y, sample.y, -filterOffset.y;
MOV result.texcoord[ 3 ].x, sample.x;
ADD result.texcoord[ 3 ].y, sample.y, -filterOffset.y;
ADD result.texcoord[ 4 ].x, sample.x, filterOffset.x;
MOV result.texcoord[ 4 ].y, sample.y;
ADD result.texcoord[ 5 ].x, sample.x, filterOffset.x;
ADD result.texcoord[ 5 ].y, sample.y, filterOffset.y;
MOV result.texcoord[ 6 ].x, sample.x;
ADD result.texcoord[ 6 ].y, sample.y, filterOffset.y;

END